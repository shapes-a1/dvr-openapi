openapi: 3.0.2
info:
  version: 1.0.0
  title: ShapesAI - Deep Visual Reasoning
  termsOfService: "https://example.com/terms/"
  contact:
    name: hello@shapes
    email: hello@shapes.ai
    url: "https://shapes.ai"
  x-logo:
    url: "https://00e9e64bac1a776f696d05165628950078386ff741dfd0d513-apidata.googleusercontent.com/download/storage/v1/b/dvr-assets/o/shape-logo-text.svg?qk=AD5uMEuV466wZKzCS-hp_xsx3rBzOV41RnMf2uQUbfRL_Dh3xpXxTGCCrTuUKjLQmomOpdX9nKc0svXkNVbDkrKI3gy1RAkZIiy966JTsWr-Ya1rAS1n9dzrykQKv-27nGJOTDuBSWvuiqcPPEP3p5RoMLoxgaMGK3Q90_MwxRaouOTbo_27HfLGF9jxIyckWKDgusx0ZVop4rK0GFDONet2loRtEB3u335XrphVrklF6nqcXXcsvDm89TVRh9M9KUOyPbfTE3HjwFR8sbCYGrfyT4QyxgsCx0RTsFd10sD-DRq4XJKRplgYSANp5-z5tnBNZX79dBN49E2Ej8nJUQZHIka7dxV_c_w8VZ5O4aqFKE9OoRp-Ua5QooF_c6fE9mXQm9a7FP6wdl82iWVM45bbTTYr3W0ZWl4HLBFh8QihbBakmBOQBOwvSv7GIN53FrywK2qv7j0JOCvKv5KlGJiZGoAy0onH1mbKR4fiDa4W_xPpbCitAvFixBhZ9wIzgJmVq7p9PT29zGXEXlLFaMCCFkjhUE_THF0X_FsLgiG5livRUDwTlvolmG9ENN0tuTPoTZ-Biqd7PTW57hRGN7PQrL7jUqtL83kWI9O2HQX_6ClrlLs-BwX62egUIs3f_cG8JFsiAeU8mR-gQYYssQmLg6YTNaBusBuroAFTwRbqUqbrl_rbVn4bVZvrq8exfa3dwNHrYGabm-0NjwZz2pk2wzpdf103kVmM2yyL-MMOqAzRHN_n8QE1EUMKBcp1_Bd7Rn-soDJ2hea3lkjl4tQXxRlIhSNEmT_9mfggk8E1ydbp2UAS32g&isca=1"
  description: |
    # Introduction

    This is the documentation for the Deep Visual Reasoning (DVR) API. \

    The API can be used to process video content and extract events of interest.

externalDocs:
  description: the public repository for theAPI specification is available at https://shapes-a1.github.io/dvr-openapi
  url: "https://shapes-a1.github.io/dvr-openapi"

tags:
  - name: Jobs
    description: Jobs operations allow clients to submit videos for processing and retrieve information about their status
  - name: Usage
    description: Usage operations allow clients to retrieve information about their compute quota usage
servers:
  - url: "https://dvrbeta.shapes.ai/api"
paths:
  "/jobs/{id}":
    $ref: "paths/jobs@{id}.yaml"
  "/usage":
    $ref: "paths/usage.yaml"
components:
  securitySchemes:
    api_key:
      description: |
        This scheme relies on authenticating users by having them present an `Authorization` header containing the value `Bearer` followed by their API Key.

        Example `Authorization: Bearer my-api-key`

        API Key can be requests by submitting an email to developer@shapes.ai
      type: apiKey
      in: header
      name: Authorization
