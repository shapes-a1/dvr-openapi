openapi: 3.0.2
info:
  version: 1.0.0
  title: ShapesAI - Deep Visual Reasoning
  contact:
    name: hello@shapes
    email: hello@shapes.ai
    url: 'https://shapes.ai'
  x-logo:
    url: 'https://storage.googleapis.com/dvr-assets/shapes-logo-black.svg'
  description: |
    # Introduction

    This is the documentation for the Deep Visual Reasoning (DVR) API.

    The API can be used to process video content and extract events of interest.
externalDocs:
  description: >-
    the public repository for theAPI specification is available at
    https://shapes-a1.github.io/dvr-openapi
  url: 'https://shapes-a1.github.io/dvr-openapi'
tags:
  - name: Jobs
    description: >-
      Jobs operations allow clients to submit videos for processing and retrieve
      information about their status
  - name: JobOutput
    description: >-
      This JSON scheme is not returned directly by the API. It can be accessed
      once a job has been processed by accessing the `output_url` value returned
      from GETing job/job-id
  - name: Usage
    description: >-
      Usage operations allow clients to retrieve information about their compute
      quota usage
servers:
  - url: 'https://dvrbeta.shapes.ai/api'
paths:
  '/jobs/{id}':
    get:
      tags:
        - Jobs
      summary: Get Job By ID
      description: >
        returns information about a job including its status and the final
        output once completed
      operationId: getJobById
      parameters:
        - name: id
          in: path
          description: The job id that needs to be fetched
          required: true
          schema:
            type: string
      security:
        - api_key: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_info'
        '401':
          description: Invalid or Missing API Key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '500':
          description: Internal Eerror
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
    post:
      tags:
        - Jobs
      summary: Create A New Job
      description: Requires authentication and sufficient compute minutes
      operationId: postJob
      security:
        - api_key: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job_info'
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Compute quota exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create'
        description: Create job object
        required: true
  /output:
    get:
      tags:
        - JobOutput
      summary: Processed JSON Definition
      description: >
        This JSON scheme is not returned directly by the API.


        It can be accessed once a job has been processed by following the
        `output_url` value returned from job/job-id
      operationId: getJobProcessedOutput
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/processed_output'
  /usage:
    get:
      tags:
        - Usage
      summary: Get User's Usage Information
      description: |
        returns information total and available usage in minutes:seconds
      operationId: getUsage
      security:
        - api_key: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage_info'
        '401':
          description: Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500'
components:
  securitySchemes:
    api_key:
      description: >
        This scheme relies on authenticating users by having them present an
        `Authorization` header containing the value `Bearer` followed by their
        API Key.


        Example `Authorization: Bearer my-api-key`


        API Key can be requests by submitting an email to developer@shapes.ai
      type: apiKey
      in: header
      name: Authorization
  schemas:
    '401':
      type: object
      properties:
        status:
          description: HTTP status code
          type: integer
          example: 401
        error:
          description: error message
          type: string
          example: invalid API key
    '403':
      type: object
      properties:
        status:
          description: HTTP status code
          type: integer
          example: 403
        error:
          description: error message
          type: string
          example: 'quota exceeded error: no compute time available'
    '404':
      type: object
      properties:
        status:
          description: HTTP status code
          type: integer
          example: 404
        error:
          description: error message
          type: string
          example: item not found
    '500':
      type: object
      properties:
        status:
          description: HTTP status code
          type: integer
          example: 500
        error:
          description: error message containing the request unique identifier
          type: string
          example: >-
            unexpected error processing request. error id:
            74d3d93e-9750-4146-9137-af90131f4c8x
    job_info:
      type: object
      properties:
        id:
          description: unique job identifier
          type: string
          example: 74d3d93e-9750-4146-9137-af90131f4c8x
        created_at:
          description: job creation timestamp (UTC)
          type: string
          example: '2020-05-10T17:59:47.123Z'
        started_at:
          description: job processing started (UTC)
          type: string
          example: '2020-05-10T17:59:47.147Z'
        completed_at:
          description: job processing completed (UTC)
          type: string
          example: '2020-05-10T18:10:33.614Z'
        status:
          description: job status
          type: string
          enum:
            - created
            - started
            - failed
            - completed
        source:
          description: input video information
          type: object
          properties:
            url:
              type: string
              description: >-
                source video URL. Currently only Google Cloud Storage links are
                supported
              example: 'gs://my-bucket/my-video.mp4'
        detection_type:
          type: array
          description: the type of events to be detected
          minItems: 1
          maxItems: 1
          items:
            type: string
            enum:
              - violence
              - road_hazard
              - social_distancing
        output_url:
          type: string
          nullable: true
          description: output artifacts URL. Available on job completion
          example: >-
            https://storage.googleapis.com/my-bucket/74d3d93e-9750-4146-9137-af90131f4c8x/output.json
        error:
          type: object
          nullable: true
          description: information about job failure. Available on job failure
          properties:
            reason:
              type: string
              example: description of the error
    create:
      type: object
      properties:
        source:
          type: object
          description: >-
            input video information. Supported video formats are .mp4, .mov and
            .avi
          properties:
            url:
              type: string
              description: >-
                source video URL. Currently only Google Cloud Storage links are
                supported
              example: 'gs://my-bucket/my-video.mp4'
        detection_type:
          type: array
          description: the type of events to be detected
          minItems: 1
          maxItems: 1
          items:
            type: string
            enum:
              - violence
              - road_hazard
              - social_distancing
    processed_output:
      type: array
      items:
        type: object
        properties:
          frame:
            description: frame number
            type: integer
            example: 1
          timestamp:
            description: frame timestamp
            type: string
            example: '0:00:00.280000'
          frame_objects:
            type: array
            items:
              type: object
              properties:
                x1:
                  description: x axis bounding box top left corner
                  type: integer
                  example: 0
                y1:
                  description: y axis bounding box top left corner
                  type: integer
                  example: 46
                x2:
                  description: x axis bounding box bottom right corner
                  type: integer
                  example: 40
                y2:
                  description: y axis bounding box bottom right corner
                  type: integer
                  example: 170
                label:
                  description: human-readable object label
                  type: string
                  example: person
                score:
                  description: confidence score
                  type: number
                  example: 0.9695325493812561
                activities:
                  type: array
                  description: >-
                    collection of the top 5 detected activities in the current
                    frame
                  items:
                    type: object
                    properties:
                      label:
                        description: human-readable activity label
                        type: string
                        example: fight/hit (a person)
                      score:
                        description: confidence score
                        type: number
                        example: 0.9695325493812561
                id:
                  description: the object identifier
                  type: string
                  example: K_2
          frame_events:
            type: array
            items:
              type: object
              properties:
                event_type:
                  description: type of event detected
                  type: string
                  example: violence
                detected:
                  description: functional program description of the event
                  type: string
                  example: 'TOWARDS ( K_6 , K_2 )'
                probability:
                  description: probability sequence of event
                  type: string
                  example: ADD ( 0.8479 )
                total_probability:
                  description: overall event probability/confidence score
                  type: number
                  minimum: 0
                  maximum: 1
                  example: 0.8479
                explanation:
                  description: human-readable event explanation
                  type: string
                  example: >-
                    Potential Threat: Two persons (K_6) and (K_2), they are near
                    each other and moving towards each other
          screenshot:
            description: >-
              URL of the frame screenshot. Currently only Google Cloud Storage
              links are supported
            type: string
            example: 'gs://bucket-name/job-id/screenshots/frame1.jpg'
    usage_info:
      type: object
      properties:
        usage:
          description: input video information
          properties:
            total_minutes:
              type: string
              description: total number of minutes of compute used
              example: '123:45'
            available_minutes:
              type: string
              description: >-
                available number of minutes of compute to use for processing
                videos
              example: '12:34'
